options(repos = list(CRAN="http://cran.rstudio.com/"))
help(BoxCox)
library(forecast)
library(quantmod)
getSymbols("INTC")
head(INTC)
getwd()
setwd("../../../")
getwd()
write.csv(INTC,"intc.csv")
# Download financial statements (balance sheet, income statement, cash flow)
getFinancials(symbol, src = "yahoo", auto.assign = TRUE)
# View Income Statement
view(AAPL.f$IS)
# Define the stock symbol (e.g., Apple - AAPL)
symbol <- "AAPL"
# Download financial statements (balance sheet, income statement, cash flow)
getFinancials(symbol, src = "yahoo", auto.assign = TRUE)
# Download financial statements (balance sheet, income statement, cash flow)
getFinancials(symbol, src = "google", auto.assign = TRUE)
library(tidyquant)
symbol <- "AAPL"
# Get financial ratios
ratios <- tq_get(symbol, from = "2020-01-01", get = "key.ratios")
# View financial ratios
print(ratios)
install.packages("rvest")
library(rvest)
# Define the URL (example: Yahoo Finance for Apple)
url <- "https://finance.yahoo.com/quote/AAPL/financials"
# Scrape the table
financial_data <- read_html(url) %>%
html_table(fill = TRUE)
read_html(url)
read_html(url)
# Scrape the table
financial_data <- read_html(url) %>%
html_table(fill = TRUE)
# View scraped financial statements
print(financial_data)
# Define the URL (example: Yahoo Finance for Apple)
url <- "https://finance.yahoo.com/quote/AAPL/financials"
read_html(url)
read_html("https://finance.yahoo.com/quote/AAPL/financials")
curl("https://finance.yahoo.com/quote/AAPL/financials")
library(curl)
curl("https://finance.yahoo.com/quote/AAPL/financials")
read_html("https://finance.yahoo.com/quote/AAPL/financials")
curl_fetch("https://finance.yahoo.com/quote/AAPL/financials")
curl_download("https://finance.yahoo.com/quote/AAPL/financials","bla.html")
curl_download("https://finance.yahoo.com/quote/AAPL","bla.html")
read_html("https://finance.yahoo.com/quote/AAPL/financials/")
curl("https://finance.yahoo.com/quote/AAPL/financials")
read_html("https://finance.yahoo.com/quote/AAPL/financials/")
install.packages("alphavantager")
library(alphavantager)
# Set Alpha Vantage API key
av_api_key("4JMX0CV41XGWX78L")
# Download Balance Sheet data
balance_sheet <- av_get("AAPL", av_fun = "BALANCE_SHEET")
# View Balance Sheet
print(balance_sheet)
# Download Balance Sheet data
balance_sheet <- av_get("AAPL", fucntion = "BALANCE_SHEET",fiscalDateEnding = c("2024-09-30"))
# Download Balance Sheet data
balance_sheet <- av_get("AAPL", av_fun = "BALANCE_SHEET",fiscalDateEnding = c("2024-09-30"))
av_get(av_fun = "SECTOR")
# Set Alpha Vantage API key
av_api_key("4JMX0CV41XGWX78L")
av_get(av_fun = "SECTOR")
av_get("MSFT", av_fun = "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
av_get("MSFT", av_fun = "GLOBAL_QUOTE")
av_get("MSFT")
av_get("EUR/USD", av_fun = "FX_DAILY", outputsize = "full")
av_get("MSFT", av_fun = "TIME_SERIES_INTRADAY", interval = "5min", outputsize = "full")
balance_sheet <- av_get("AAPL", av_fun = "BALANCE_SHEET")
av_get("AAPL", av_fun = "BALANCE_SHEET")
av_get("AAPL", av_fun = "BALANCE_SHEET")
library(jsonlite)
fromJSON("https://www.alphavantage.co/query?function=BALANCE_SHEET&symbol=AAPL&apikey=4JMX0CV41XGWX78L")
# Download Balance Sheet data
balance_sheet <- av_get("AAPL", av_fun = "BALANCE_SHEET",annualReports = list(fiscalDateEnding = c("2024-09-30")))
Frequency(log_returns)
library(PerformanceAnalytics)
library(quantmod)
# Download data for S&P 500 from Yahoo Finance
getSymbols("^GSPC", src = "yahoo", from = "2000-01-01", to = Sys.Date())
price_data <- Cl(GSPC)
plot(price_data)
# Calculate log returns
log_returns <- Return.calculate(price_data, method = "log")
log_returns <- log_returns[-1, ]  # Remove NA in the first observation
# Identify drawdowns
drawdowns <- findDrawdowns(log_returns)
# View drawdown details
head(drawdowns)
chart.Drawdown(log_returns)
sortDrawdowns(drawdowns)
table.Drawdowns(log_returns,top=20)
maxDrawdown(log_returns)
charts.PerformanceSummary(log_returns)
chart.Bar(log_returns)
Frequency(log_returns)
HurstIndex(log_returns)
install.packages("fPortfolio")
library(fPortfolio)
?arima.sim
?arima
getwd90
getwd()
